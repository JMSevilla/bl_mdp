// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WTW.MdpService.Infrastructure.BereavementDb;

#nullable disable

namespace WTW.MdpService.Migrations.BereavementDb
{
    [DbContext(typeof(BereavementDbContext))]
    partial class BereavementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WTW.MdpService.Domain.Bereavement.BereavementContactConfirmation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BusinessGroup")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ExpiresAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FailedConfirmationAttemptCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("MaximumConfirmationAttemptCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<DateTimeOffset?>("ValidatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("BereavementContactConfirmation", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Bereavement.BereavementJourney", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BusinessGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("SubmissionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasAlternateKey("BusinessGroup", "ReferenceNumber");

                    b.ToTable("BereavementJourney", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.Checkbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("AnswerValue")
                        .HasColumnType("boolean");

                    b.Property<long>("CheckboxesListId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CheckboxesListId");

                    b.ToTable("Checkbox", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.CheckboxesList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CheckboxesListKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("JourneyStepId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("JourneyStepId");

                    b.ToTable("CheckboxesList", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.JourneyBranch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BereavementJourneyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BereavementJourneyId");

                    b.ToTable("JourneyBranch", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.JourneyStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CurrentPageKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<bool>("IsNextPageAsDeadEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<long>("JourneyBranchId")
                        .HasColumnType("bigint");

                    b.Property<string>("NextPageKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("SubmitDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("JourneyBranchId");

                    b.ToTable("JourneyStep", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.QuestionForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AnswerKey")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("AnswerValue")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<long>("JourneyStepId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.HasIndex("JourneyStepId")
                        .IsUnique();

                    b.ToTable("QuestionForm", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.Checkbox", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Common.Journeys.CheckboxesList", null)
                        .WithMany("Checkboxes")
                        .HasForeignKey("CheckboxesListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.CheckboxesList", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Common.Journeys.JourneyStep", null)
                        .WithMany("CheckboxesLists")
                        .HasForeignKey("JourneyStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.JourneyBranch", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Bereavement.BereavementJourney", null)
                        .WithMany("JourneyBranches")
                        .HasForeignKey("BereavementJourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.JourneyStep", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Common.Journeys.JourneyBranch", null)
                        .WithMany("JourneySteps")
                        .HasForeignKey("JourneyBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.QuestionForm", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Common.Journeys.JourneyStep", null)
                        .WithOne("QuestionForm")
                        .HasForeignKey("WTW.MdpService.Domain.Common.Journeys.QuestionForm", "JourneyStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Bereavement.BereavementJourney", b =>
                {
                    b.Navigation("JourneyBranches");
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.CheckboxesList", b =>
                {
                    b.Navigation("Checkboxes");
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.JourneyBranch", b =>
                {
                    b.Navigation("JourneySteps");
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Common.Journeys.JourneyStep", b =>
                {
                    b.Navigation("CheckboxesLists");

                    b.Navigation("QuestionForm");
                });
#pragma warning restore 612, 618
        }
    }
}
