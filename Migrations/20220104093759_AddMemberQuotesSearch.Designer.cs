// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WTW.MdpService.Infrastructure.MdpDb;

#nullable disable

namespace WTW.MdpService.Migrations
{
    [DbContext(typeof(MdpDbContext))]
    [Migration("20220104093759_AddMemberQuotesSearch")]
    partial class AddMemberQuotesSearch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.JourneyBranch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<long>("RetirementJourneyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RetirementJourneyId");

                    b.ToTable("JourneyBranch", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.JourneyStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CurrentPageKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<long>("JourneyBranchId")
                        .HasColumnType("bigint");

                    b.Property<string>("NextPageKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTimeOffset>("SubmitDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("JourneyBranchId");

                    b.ToTable("JourneyStep", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.MemberQuotesSearch", b =>
                {
                    b.Property<string>("BusinessGroup")
                        .HasColumnType("text");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LatestCalculationRetirementDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BusinessGroup", "ReferenceNumber");

                    b.ToTable("MemberQuotesSearch", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.QuestionForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AnswerKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<long>("JourneyStepId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.HasIndex("JourneyStepId")
                        .IsUnique();

                    b.ToTable("QuestionForm", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.RetirementJourney", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BusinessGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasAlternateKey("BusinessGroup", "ReferenceNumber");

                    b.ToTable("RetirementJourney", (string)null);
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.JourneyBranch", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Mdp.RetirementJourney", null)
                        .WithMany("JourneyBranches")
                        .HasForeignKey("RetirementJourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.JourneyStep", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Mdp.JourneyBranch", null)
                        .WithMany("JourneySteps")
                        .HasForeignKey("JourneyBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.QuestionForm", b =>
                {
                    b.HasOne("WTW.MdpService.Domain.Mdp.JourneyStep", null)
                        .WithOne("QuestionForm")
                        .HasForeignKey("WTW.MdpService.Domain.Mdp.QuestionForm", "JourneyStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.JourneyBranch", b =>
                {
                    b.Navigation("JourneySteps");
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.JourneyStep", b =>
                {
                    b.Navigation("QuestionForm");
                });

            modelBuilder.Entity("WTW.MdpService.Domain.Mdp.RetirementJourney", b =>
                {
                    b.Navigation("JourneyBranches");
                });
#pragma warning restore 612, 618
        }
    }
}
